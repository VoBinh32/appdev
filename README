
# This project is to turn a Raspberry PI as an audio devices. The 
device is able to do 2 functions: as a sound collector and as a 
test-tone generator.

Table of Content
	1. Configuration Instruction
	2. Installation Instruction
	3. Operating Instruction
	4. File list (Manifest)
	5. Copyright / copyleft
	6. Contact Information
	7. Credits and Acknowledgements

1. Configuration Instructions

The application is running on a Raspberry PI 3 model B. This PI
should come with a USB sound card., a network connection, a 
microphone.

1.1	Configure USB sound card as default audio device

	We can configure default audio devices using Alsa. Advanced Linux Sound Architecture (ALSA) is a software framework is part of the linux so we should be able to modify the conf file and set the default audio device. 

1.2	Install Libcurl library

	A command line tool and library for transferring data with URL syntax, supporting HTTP, HTTPS, FTP, FTPS, GOPHER, TFTP, SCP, SFTP, SMB, TELNET, DICT, LDAP, LDAPS, FILE, IMAP, SMTP, POP3, RTSP and RTMP.


2. Installation Instruction

2.1 Set USB Sound Card as Default:

	- Boot up RPi, and apply the USB sound card. Use “lsusb” command to check if your USB sound card is mounted.

	- Use “sudo nano /etc/asound.conf”command and put following content to the file:
		pcm.!default {
			type plug
			slave {
				pcm "hw:1,0"
			}
		}
		ctl.!default {
				type hw
				card 1
		}

	- Go to your home directory. Use “nano .asoundrc” command and put the same content to the file.

	- Run “alsamixer” you should be able to see that USB sound card is the default audio device.

	- Run “arecord -r44100 -c1 -f S16_LE -d5 test.wav” to test that your microphone is working. 
	  You should see a “test.wav” file in the current folder.

	- Put earphone on the USB sound card. Run “aplay test.wav” to check that recording is okay.

2.2 Install libcurl instructions:



	- First use command "ls /usr/include/curl" or "ls /usr/include/arm-linux-gnueabihf/curl" to identify that libcurl library is installed.

	- If the folder doesn’t exist. Run “sudo apt-get update” to update the application list.

	- Run “sudo apt-get install libcurl3” to install the libcurl3.

	- Run “sudo apt-get install libcurl4-openssl-dev” to install the development API of libcurl4.


3. Operating Instructions:
	- Prepare all the files from the resporitory into  Raspberry Pi's 
directory.

	- Run “make”


	- Run “./sound.out” to generate a barchart of captured sound.

	- “./sound.out” : create testTone.wav with your specified requests
	
	- Using a mic and a headphone to check your testTone.wav if it works well or not.

4. File list (Manifest)
	- screen.c
	- makefile
	- screen.h
	- main.c
	- sound.c
	- sound.h
	- sound.php
	- makefile
	- comm.h
	- comm.c
	- testcurl.c
	Runtime files : testTone.wav, test.wav



5. Copyright / copyleft: by Vo Binh, instructed by Dr. Gao Chao from Vaasa University of Applied Sciences.


6. Contact Information
	Name : Vo Binh
	Email : thanhbinh322000@gmail.com

7. Credits and Acknowledgements

7.1  Credits : instructed by Dr. Gao Chao from Vaasa University of Applied Sciences.

7.2 Acknowledgements

- Basic knowledge of Raspberry Pi/Linux system.
- Knowing how to use software development, testing, documentation and version management tools.
- Starting to get how to develop an application on such a device





